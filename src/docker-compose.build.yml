x-storage-creds: &storage-creds
  environment:
    STORAGE_USER: ${STORAGE_USER:-admin}
    STORAGE_PASSWORD: ${STORAGE_PASSWORD:-password}

x-s3fs: &s3fs
  devices:
    - /dev/fuse:/dev/fuse
  cap_add:
    - SYS_ADMIN
  security_opt:
    - apparmor:unconfined

services:

  # --- BACKEND SERVICES ---

  storage:
    <<: *storage-creds
    build: ./storage
    volumes:
      - storage_data:/usr/src/app/localData
      - storage_meta:/usr/src/app/localMetadata
    restart: always

  compute-manager:
    <<: *storage-creds
    build: ./compute-manager
    volumes:
      - ${DRIVER_CONFIG}:/app/worker/worker.yaml
      - ${DOCKER_SOCKET:-/dev/null}:/var/run/docker.sock
    restart: always

  experiment-server:
    <<: [*storage-creds, *s3fs]
    build: 
      context: .
      dockerfile: ./experiment-server/Dockerfile
    depends_on:
      storage:
        condition: service_healthy
    restart: always

  ### --- FRONTEND SERVICES ---

  catalog-explorer:
    <<: *storage-creds
    build: 
      context: .
      dockerfile: ./catalog-explorer/Dockerfile
    depends_on:
      storage:
        condition: service_healthy
    restart: always

  workspace:
    <<: *storage-creds
    build: 
      context: .
      dockerfile: ./workspace/Dockerfile
    depends_on:
      - catalog-explorer
    volumes:
      - workspace_data:/srv/workspace
    restart: always

  reverse-proxy:
    build: ./reverse-proxy
    depends_on:
      storage:
        condition: service_started
      workspace:
        condition: service_started
      compute-manager:
        condition: service_started
      experiment-server:
        condition: service_started
      catalog-explorer:
        condition: service_started
    ports:
      - "${FLINT_PORT:-8701}:80"
    restart: always

volumes:
  storage_data:
  storage_meta:
  workspace_data: